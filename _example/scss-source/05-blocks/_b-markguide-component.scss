/*md

# b-markguide-component

This is example of component documentation. The first paragraph become the preamble for page.
Try to provide that main idea of component in this lines.

Component page unlike regular guideline page consists of:

* aside with includes, included in, local variables and imports stat
* playground
* footer with statistic and component structure

## Playground

This is example of rendered component. Use `html_example` code "fence" to create playground.

**Click on border of this box to expand the playground.**

```html_example
<h1 class="b-component">
    <span class="b-component__text">
        Just dummy example
    </span>
</h1>
```

Code in playground is live-editable. So any changes like another text, tags or classes could be previewed in real time.
And if needed copied and pasted to content assets or so.

Playground also show area width on page resize so you get precise information of actual example width.

## Regular code blocks

Also any `css`, `html` or `js` code could be added to description.

```html
<div class="markguide-loader"></div>
```

For regular code blocks we have styles for "do"-"not do" blocks:

Use `div` HTML-element so page will be better gziped:

## Use styles that not included in project css

To use styles that needed only for this component you have 2 options:

1. define it in separate file that used only in markguide
2. add `style` tag inside component documentation comment

```html_example
<div id="animated-logo"></div>
```

See the `b-markguide-component.scss` source for example.

```html
<style>
#animated-logo {
	border: 1px solid #3281e2;
}
</style>
```


<style>
#animated-logo {
	border: 1px solid #3281e2;
}
</style>

## Component footer

In footer you get the information about:

* Total declarations in component
* Declaration size graph. Normal component have most of declaration in the beginning and very few at the end.
If not component probably have deviated modifications.
* Component structure that get you the idea of component organization without opening source file.
* Possible bad practices count. Right now it Important, Vendor prefixes and floats. Hover on it to get additional info.
* And basic properties count that sorted from most used to less used.
This properties can provide you the idea about component profile.
Container type of component should not have any styling properties, but only the metric and layouting.
* If constants is declared than messages about constants consistency is showed.

*/

@import "some-component-1";
@import "some-component-2";

$local-var: 10px;

.markguide-component {
	@include component();
	background-color: green;
	font-family: sans; /* stylelint-disable-line */
	margin: $local-var;

	@media all {
		background: center center orange no-repeat;
		color: red;
		font: normal 20px / 1.2 serif; /* stylelint-disable-line */
		padding: 20px !important; /* stylelint-disable-line */
	}

	&__item-empty {
		padding: 20px;

		&:hover {
			outline: none;
		}
	}

	&._mod {
		float: left;
		font: normal 20px sans; /* stylelint-disable-line */
		height: 100px;
		padding: 40;
		width: 100px;
	}
}

@keyframes animationName {
	0% {
		width: 0;
	}

	100% {
		width: 100px;
	}
}
